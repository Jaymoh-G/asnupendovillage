on: push
name: 🚀 Deploy Laravel as ZIP + Extract Script

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v2

      - name: 🧰 Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"

      - name: 🔐 Copy .env.example to .env
        run: cp .env.example .env

      - name: 🧶 Install Composer dependencies
        run: composer install --no-dev --prefer-dist --optimize-autoloader

      - name: 🧰 Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: 📦 Install Node dependencies
        run: npm install

      - name: 🛠️ Build frontend assets
        run: npm run build

      - name: 🛠️ Ensure Laravel storage dirs exist
        run: |
          mkdir -p storage/framework/views
          mkdir -p storage/framework/cache
          mkdir -p storage/framework/sessions
          mkdir -p storage/logs
          chmod -R 775 storage
          chmod -R 775 bootstrap/cache

      - name: ⚙️ Laravel optimization
        run: |
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache

      - name: 🗜️ Zip deployment package (Optimized)
        run: |
          echo "Creating optimized deployment package..."

          # Create a temporary directory for deployment files
          mkdir -p deploy-temp

          # Copy only necessary files
          cp -r app deploy-temp/
          cp -r bootstrap deploy-temp/
          cp -r config deploy-temp/
          cp -r database deploy-temp/
          cp -r lang deploy-temp/
          cp -r public deploy-temp/
          cp -r resources deploy-temp/
          cp -r routes deploy-temp/
          cp -r storage deploy-temp/
          cp -r vendor deploy-temp/
          cp artisan deploy-temp/
          cp composer.json deploy-temp/
          cp composer.lock deploy-temp/

          # Remove unnecessary files from storage
          rm -rf deploy-temp/storage/logs/*
          rm -rf deploy-temp/storage/app/*
          rm -rf deploy-temp/storage/debugbar/*
          rm -rf deploy-temp/storage/framework/cache/*
          rm -rf deploy-temp/storage/framework/sessions/*
          rm -rf deploy-temp/storage/framework/views/*
          rm -rf deploy-temp/bootstrap/cache/*

          # Create optimized zip
          cd deploy-temp
          zip -r ../deploy.zip . -x "*.log" "*.tmp" "*.cache"
          cd ..

          # Clean up
          rm -rf deploy-temp

          echo "Deployment package size:"
          ls -lh deploy.zip

      - name: 💾 Upload deploy.zip to GitHub (as artifact)
        uses: actions/upload-artifact@v4
        with:
          name: deploy-package
          path: deploy.zip

      # Try with a different FTP action that handles large files better
      - name: 📤 Upload deploy.zip via SCP (More Reliable)
        uses: appleboy/scp-action@v0.1.7
        with:
          host: 41.80.37.31
          username: ${{ secrets.ftp_username }}
          password: ${{ secrets.ftp_password }}
          source: "deploy.zip"
          target: "/staging.asnupendovillage.org/"
          strip_components: 0

      - name: 📤 Upload extract script via SCP
        uses: appleboy/scp-action@v0.1.7
        with:
          host: 41.80.37.31
          username: ${{ secrets.ftp_username }}
          password: ${{ secrets.ftp_password }}
          source: "e.php"
          target: "/staging.asnupendovillage.org/"
          strip_components: 0
